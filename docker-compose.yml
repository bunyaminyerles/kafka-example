version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  producer-service:
    image: producer-service:latest
    restart: always
    build:
      context: ./producer-application/
      dockerfile: Dockerfile
    pull_policy: never
    ports:
      - 8080:8080
    environment:
      APP_NAME: producer-service
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: test

  consumer-service:
    image: consumer-service:latest
    restart: always
    build:
      context: ./consumer-application/
      dockerfile: Dockerfile
    pull_policy: never
    ports:
      - 8081:8081
    environment:
      APP_NAME: consumer-service
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: test


